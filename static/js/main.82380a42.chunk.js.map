{"version":3,"sources":["Components/CoffeeCardInfoBoxes.js","Components/CoffeeCard.js","Components/CoffeeSelectIcons.js","Components/CoffeeSelect.js","App.js","reportWebVitals.js","index.js"],"names":["CoffeeCardInfoBoxes","props","useState","className","bean","roast","origin","flavor","brew","brewingMethods","join","CoffeeCard","CSSTransition","in","cardState","timeout","animationLength","classNames","src","image","description","name","subText","testVal","CoffeeSelect","onClick","showCoffee","setCardState","console","log","beanID","setTimeout","fetch","then","result","json","data","setBean","setTestVal","setAnimationLength","App","setCoffeeBeans","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82380a42.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\n\nexport default function CoffeeCardInfoBoxes(props) {\n  const [testVal, setTestVal] = useState(0);\n\n  return (\n    <div className=\"InfoBoxes\">\n      <div className=\"SmallBoxes\">\n        <div className=\"InfoBox one\">Roast: {props.bean.roast}</div>\n        <div className=\"InfoBox two\">Origin: {props.bean.origin}</div>\n        <div className=\"InfoBox three\">Flavor: {props.bean.flavor}</div>\n        <div className=\"InfoBox four\">Brew: {props.bean.brew}</div>\n      </div>\n\n      <div className=\"LargeBox\">\n        <div className=\"LargeBoxText\">\n          Brewing Methods: {props.bean.brewingMethods.join(\", \")}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport CoffeeCardInfoBoxes from \"./CoffeeCardInfoBoxes\";\nimport \"../styles.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default function CoffeeCard(props) {\n  return (\n    <CSSTransition\n      key={props.testVal}\n      in={props.cardState}\n      timeout={props.animationLength}\n      classNames=\"Coffee-Slide\"\n    >\n      <div className=\"CoffeeCard\">\n        {/* IMAGE AND DESCRIPTION */}\n        <div className=\"LeftSide\">\n          <div className=\"CoffeeImage\">\n            <img src={props.bean.image} />\n          </div>\n          <div className=\"CoffeeDescription\">\n            Description: {props.bean.description}\n          </div>\n        </div>\n\n        <div className=\"RightSide\">\n          {/* CARD HEADER */}\n          <div className=\"CardHeader\">\n            <div className=\"CoffeeName\">\n              {props.bean.name}\n              <div className=\"CoffeeSubtext\">{props.bean.subText}</div>\n            </div>\n          </div>\n\n          {/* INFORMATION BOXES */}\n          <CoffeeCardInfoBoxes bean={props.bean} />\n        </div>\n      </div>\n    </CSSTransition>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\n\nexport default function CoffeeSelect(props) {\n  return (\n    <div>\n      <button\n        className=\"CoffeeIcon\"\n        onClick={() => {\n          showCoffee(0);\n          props.setCardState(false);\n          console.log(props.cardState);\n        }}\n      >\n        Tanzania Peaberry\n      </button>\n      <button\n        className=\"CoffeeIcon\"\n        onClick={() => {\n          showCoffee(1);\n          props.setCardState(false);\n          console.log(props.cardState);\n        }}\n      >\n        Hawaii Kona\n      </button>\n      <button\n        className=\"CoffeeIcon\"\n        onClick={() => {\n          showCoffee(2);\n          props.setCardState(false);\n          console.log(props.cardState);\n        }}\n      >\n        Nicaraguan Coffee\n      </button>\n      <button\n        className=\"CoffeeIcon\"\n        onClick={() => {\n          showCoffee(3);\n          props.setCardState(false);\n          console.log(props.cardState);\n        }}\n      >\n        Sumatra Mandheling\n      </button>\n      <button\n        className=\"CoffeeIcon\"\n        onClick={() => {\n          showCoffee(4);\n          props.setCardState(false);\n          console.log(props.cardState);\n        }}\n      >\n        Yirgacheffe\n      </button>\n    </div>\n  );\n\n  function showCoffee(beanID) {\n    // beanID is passed in as argument.\n    console.log(beanID);\n    setTimeout(() => {\n      fetch(\"data/coffee.json\")\n        .then((result) => result.json())\n        .then((data) => {\n          // log the data for the beanID.\n          console.log(data[beanID]);\n          props.setBean(data[beanID]);\n        });\n    }, 635);\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport CoffeeSelectIcons from \"./CoffeeSelectIcons\";\nimport \"../styles.css\";\n\nexport default function CoffeeSelect(props) {\n  return (\n    <div className=\"CoffeeSelect\">\n      <h4>Select Coffee</h4>\n      <CoffeeSelectIcons\n        setBean={props.setBean}\n        testVal={props.testVal}\n        setTestVal={props.setTestVal}\n        cardState={props.cardState}\n        setCardState={props.setCardState}\n        animationLength={props.animationLength}\n        setAnimationLength={props.setAnimationLength}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CoffeeCard from \"./Components/CoffeeCard\";\nimport CoffeeSelect from \"./Components/CoffeeSelect\";\n\nexport default function App() {\n  //hook for coffeeBeans\n  const [coffeeBeans, setCoffeeBeans] = useState([]);\n  //hook for current bean\n  const [bean, setBean] = useState({ brewingMethods: [] });\n  //hooks for css animation\n  const [testVal, setTestVal] = useState(0);\n  const [cardState, setCardState] = useState(true);\n  const [animationLength, setAnimationLength] = useState(1250);\n\n  //load json data\n  useEffect(() => {\n    fetch(\"data/coffee.json\")\n      .then((result) => result.json())\n      .then((data) => {\n        //store data\n        setCoffeeBeans(data);\n        //log data to console\n        console.log(data);\n        //set bean\n        setBean(data[0]);\n      });\n  }, []);\n\n  // on effect, set cardstate back to true after slide animation is complete.\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setCardState(true);\n    }, animationLength);\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Coffee App</h1>\n      <div className=\"CoffeeStuff\">\n        <CoffeeSelect\n          setBean={setBean}\n          testVal={testVal}\n          setTestVal={setTestVal}\n          cardState={cardState}\n          setCardState={setCardState}\n          animationLength={animationLength}\n          setAnimationLength={setAnimationLength}\n        />\n        <CoffeeCard\n          bean={bean}\n          testVal={testVal}\n          setTestVal={setTestVal}\n          cardState={cardState}\n          setCardState={setCardState}\n          animationLength={animationLength}\n          setAnimationLength={setAnimationLength}\n        />\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}